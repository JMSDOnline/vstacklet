server {
	listen *:{{http_port}};
	listen [::]:{{http_port}};
	server_name {{domain}};

	access_log /var/log/vstacklet/{{domain}}.access.log;
	error_log /var/log/vstacklet/{{domain}}.error.log;

	root {{webroot}}/public;
	index index.html index.htm index.php;

	location /.well-known {
		alias {{webroot}}/.well-known;
		allow all;
		default_type "text/plain";
		autoindex on;
	}

	# These options are for nginx caching.
	# Update the uri paths to match your needs.
	# Typically you would want to add
	# /wp-admin/ - Wordpress
	# /administrator/ - Joomla! etc...
	set $no_cache 0;
	if ($query_string) {
		set $no_cache 1;
	}
	if ($http_x_custom_header) {
		set $no_cache 0;
	}
	if ($uri ~ "/your-admin-login/" ) {
		set $no_cache 1;
	}
	if ($http_cookie ~ "users_login_cookie" ) {
		set $no_cache 1;
	}

	location ~ [^/]\.php(/|$) {
		try_files $uri =404;

		# These options are for nginx caching.
		# All cached files are stored in /etc/nginx/cache.
		# Uncomment if caching with Nginx is your jam!
		#fastcgi_cache phpcache;
		#fastcgi_cache_methods GET HEAD;
		#add_header X-Fastcgi-Cache $upstream_cache_status;
		#fastcgi_cache_bypass $no_cache;
		#fastcgi_no_cache $no_cache;
		#fastcgi_cache_valid 200 302 60m;
		#fastcgi_cache_valid  404 5m;
		#proxy_read_timeout 300;

		# These are typical nginx settings.
		fastcgi_split_path_info ^(.+\.php)(/.+)$;
		fastcgi_index index.php;
		include fcgi.conf;
		fastcgi_pass unix:/var/run/php/php{{php}}-fpm.sock;
		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
		fastcgi_read_timeout 300;
		fastcgi_ignore_headers X-Accel-Expires Expires Cache-Control;
	}

	# Location Profiles
	include server.configs/location/cache-busting.conf;
	include server.configs/location/cross-domain-fonts.conf;
	include server.configs/location/expires.conf;
	include server.configs/location/protect-system-files.conf;
	#include server.configs/location/letsencrypt.conf;

	# Security Profiles
	include server.configs/directives/cloudflare-real-ip.conf;
	include server.configs/directives/common-exploit-prevention.conf;
	include server.configs/directives/mime-type-security.conf;
	include server.configs/directives/reflected-xss-prevention.conf;
	include server.configs/directives/sec-bad-bots.conf;
	include server.configs/directives/sec-file-injection.conf;
	include server.configs/directives/sec-php-easter-eggs.conf;
	include server.configs/directives/server-security-options.conf;
	include server.configs/directives/socket-settings.conf;

	# WordPress Specific
	# include wordpress.conf;
	# include restrictions.conf;
	# We only enable this option if either W3TC is in effect on a WordPress install
	# Or you manage an override from your application root.
	# An example would be that of Admin Tools for Joomla!
	# include {{webroot}}/public/nginx.conf;

}

server {
	listen [::]:{{https_port}} ssl http2;
	listen *:{{https_port}} ssl http2;
	server_name {{domain}};

	access_log /var/log/vstacklet/{{domain}}.access.log;
	error_log /var/log/vstacklet/{{domain}}.error.log;

	ssl_certificate /etc/ssl/certs/ssl-cert-snakeoil.pem;
	ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;
	root {{webroot}}/public;
	index index.html index.htm index.php;

	location /.well-known {
		alias {{webroot}}/.well-known;
		allow all;
		default_type "text/plain";
		autoindex on;
	}

	# These options are for nginx caching.
	# Update the uri paths to match your needs.
	# Typically you would want to add
	# /wp-admin/ - Wordpress
	# /administrator/ - Joomla! etc...
	set $no_cache 0;
	if ($query_string) {
		set $no_cache 1;
	}
	if ($http_x_custom_header) {
		set $no_cache 0;
	}
	if ($uri ~ "/your-admin-login/" ) {
		set $no_cache 1;
	}
	if ($http_cookie ~ "users_login_cookie" ) {
		set $no_cache 1;
	}

	location ~ [^/]\.php(/|$) {
		try_files $uri =404;

		# These options are for nginx caching.
		# All cached files are stored in /etc/nginx/cache.
		# Uncomment if caching with Nginx is your jam!
		#fastcgi_cache phpcache;
		#fastcgi_cache_methods GET HEAD;
		#add_header X-Fastcgi-Cache $upstream_cache_status;
		#fastcgi_cache_bypass $no_cache;
		#fastcgi_no_cache $no_cache;
		#fastcgi_cache_valid 200 302 60m;
		#fastcgi_cache_valid  404 5m;
		#proxy_read_timeout 300;

		# These are typical nginx settings.
		fastcgi_split_path_info ^(.+\.php)(/.+)$;
		fastcgi_index index.php;
		include fcgi.conf;
		fastcgi_pass unix:/var/run/php/php{{php}}-fpm.sock;
		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
		fastcgi_read_timeout 300;
		fastcgi_ignore_headers X-Accel-Expires Expires Cache-Control;
	}

	# Location Profiles
	include server.configs/location/cache-busting.conf;
	include server.configs/location/cross-domain-fonts.conf;
	include server.configs/location/expires.conf;
	include server.configs/location/protect-system-files.conf;
	#include server.configs/location/letsencrypt.conf;

	# Security Profiles
	include server.configs/directives/ssl.conf;
	include server.configs/directives/cloudflare-real-ip.conf;
	include server.configs/directives/common-exploit-prevention.conf;
	include server.configs/directives/mime-type-security.conf;
	include server.configs/directives/reflected-xss-prevention.conf;
	include server.configs/directives/sec-bad-bots.conf;
	include server.configs/directives/sec-file-injection.conf;
	include server.configs/directives/sec-php-easter-eggs.conf;
	include server.configs/directives/server-security-options.conf;
	include server.configs/directives/socket-settings.conf;

	# WordPress Specific
	# include wordpress.conf;
	# include restrictions.conf;
	# We only enable this option if either W3TC is in effect on a WordPress install
	# Or you manage an override from your application root.
	# An example would be that of Admin Tools for Joomla!
	# include {{webroot}}/public/nginx.conf;

}